# Generated by Django 4.1 on 2023-01-29 19:24

import _socket
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AplasticAnaemiaCrf",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="Name:")),
                ("dob", models.DateField(verbose_name="Date of birth:")),
                ("age", models.IntegerField(verbose_name="Age:")),
                (
                    "sex",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=4,
                        verbose_name="Sex",
                    ),
                ),
                ("weight", models.IntegerField(help_text="in Kg", verbose_name="Weight")),
                ("file_no", models.CharField(max_length=80, verbose_name="File Number:")),
                ("region", models.CharField(max_length=24, verbose_name="Region")),
                ("district", models.CharField(max_length=24, verbose_name="District")),
                ("date_admission", models.DateField(verbose_name="Date Of Admission:")),
                (
                    "symptom_present_today",
                    models.TextField(verbose_name="Symptom presented today:"),
                ),
                (
                    "duration_symptom_start",
                    models.CharField(
                        max_length=120, verbose_name="Duration since this symptom started?"
                    ),
                ),
                (
                    "sigs_present_today",
                    models.TextField(max_length=120, verbose_name="Sigs presented today"),
                ),
                (
                    "duration_sigs_start",
                    models.CharField(
                        max_length=120, verbose_name="Duration since this sign started?"
                    ),
                ),
                (
                    "wbc",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="WBC (K/uL):"
                    ),
                ),
                (
                    "anc",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="ANC (K/uL):"
                    ),
                ),
                (
                    "lymphocytes",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="Lymphocytes (K/uL):"
                    ),
                ),
                (
                    "haemoglobin",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="Haemoglobin (g/dL):"
                    ),
                ),
                (
                    "platelets",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="Platelets K/uL):"
                    ),
                ),
                (
                    "date_fbp",
                    models.DateField(verbose_name="Date when Full Blood Picture done?"),
                ),
                (
                    "reticulocyte_results",
                    models.IntegerField(verbose_name="Reticulocyte result:"),
                ),
                (
                    "reticulocyte_pcntg",
                    models.IntegerField(verbose_name="Reticulocyte result(% percentage):"),
                ),
                (
                    "reticulocyte_date",
                    models.DateField(verbose_name="Date when reticulocyte done?"),
                ),
                (
                    "bone_marrow_aspiration",
                    models.CharField(
                        max_length=120, verbose_name="Bone Marrow Aspiration Result"
                    ),
                ),
                (
                    "bone_marrow_aspiration_date",
                    models.DateField(verbose_name="Date when Bone Marrow Aspiration done?"),
                ),
                (
                    "bone_biopsy_aspiration",
                    models.CharField(
                        max_length=120, verbose_name="Bone Marrow Biopsy Result:"
                    ),
                ),
                (
                    "bone_biopsy_aspiration_date",
                    models.DateField(verbose_name="Date when Bone Marrow Biopsy done?"),
                ),
                (
                    "smear",
                    models.CharField(max_length=120, verbose_name="Peripheral Smear Result:"),
                ),
                (
                    "smear_date",
                    models.DateField(verbose_name="Date when Peripheral Smears done?"),
                ),
                (
                    "hiv_test",
                    models.CharField(max_length=120, verbose_name="HIV test Result:"),
                ),
                ("hiv_test_date", models.DateField(verbose_name="Date when HIV done?")),
                (
                    "hepatitis_b",
                    models.CharField(max_length=120, verbose_name="Hepatitis B Result:"),
                ),
                (
                    "hepatitis_b_date",
                    models.DateField(verbose_name="Date when Hepatitis B done?"),
                ),
                (
                    "hepatitis_c",
                    models.CharField(max_length=120, verbose_name="Hepatitis C Result:"),
                ),
                (
                    "hepatitis_c_date",
                    models.DateField(verbose_name="Date when Hepatitis C done?"),
                ),
                ("ebv", models.CharField(max_length=120, verbose_name="EBV Result")),
                ("ebv_date", models.DateField(verbose_name="Date when EBV done?")),
                ("cmv", models.CharField(max_length=120, verbose_name="CMV Result:")),
                ("cmv_date", models.DateField(verbose_name="Date when CMV done?")),
                (
                    "atg",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was ATG given?",
                    ),
                ),
                (
                    "atg_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                ("atg_dosage", models.IntegerField(verbose_name="if yes, Dosage (mg/Kg)")),
                ("atg_date", models.DateField(verbose_name="Date ATG was given?")),
                (
                    "cyclosporine",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was Cyclosporine given?",
                    ),
                ),
                (
                    "cyclosporine_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                (
                    "cyclosporine_dosage",
                    models.IntegerField(verbose_name="if yes, Dosage (mg/Kg)"),
                ),
                (
                    "cyclosporine_date",
                    models.DateField(verbose_name="Date Cyclosporine given?"),
                ),
                (
                    "steroid",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was Steroid given?",
                    ),
                ),
                (
                    "steroid_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                (
                    "steroid_drug",
                    models.CharField(
                        choices=[
                            ("yes", "Methylprednisolone"),
                            ("prednisolone", "Prednisolone"),
                            ("hydrocortisone", "Hydrocortisone"),
                        ],
                        max_length=60,
                        verbose_name="Which steroid was given?",
                    ),
                ),
                (
                    "steroid_drug_other",
                    models.CharField(max_length=120, verbose_name="If other"),
                ),
                ("steroid_dosage", models.IntegerField(verbose_name="if yes, Dosage (mg/Kg)")),
                ("steroid_date", models.DateField(verbose_name="Date Cyclosporine given?")),
                (
                    "antihistamine",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was Antihistamine given?",
                    ),
                ),
                (
                    "antihistamine_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                (
                    "antihistamine_drug",
                    models.CharField(
                        choices=[
                            ("cetrizine", "Cetrizine"),
                            ("loratadine", "Loratadine"),
                            ("desloratadine", "Desloratadine"),
                            ("other", "Other"),
                        ],
                        max_length=60,
                        verbose_name="If yes, Which Antihistamine was given?",
                    ),
                ),
                (
                    "antihistamine_drug_other",
                    models.CharField(max_length=120, verbose_name="If other"),
                ),
                (
                    "antihistamine_dosage",
                    models.IntegerField(verbose_name="if yes, Dosage (mg/Kg)"),
                ),
                (
                    "antihistamine_date",
                    models.DateField(verbose_name="Date Antihistamine given?"),
                ),
                (
                    "prophylaxis",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was Prophylaxis given?",
                    ),
                ),
                (
                    "prophylaxis_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                (
                    "prophylaxis_drug",
                    models.CharField(
                        choices=[
                            ("antibiotic", "Antibiotic"),
                            ("antifungal", "Antifungal"),
                            ("antiviral", "Antiviral"),
                            ("all_above", "All of above"),
                            ("other", "Other"),
                        ],
                        max_length=60,
                        verbose_name="If yes, Which Prophylaxis was given?",
                    ),
                ),
                (
                    "antibiotic_drug",
                    models.CharField(
                        choices=[("ciprofloxacin", "Ciprofloxacin"), ("other", "Other")],
                        max_length=60,
                        verbose_name="If antibiotic",
                    ),
                ),
                (
                    "ciprofloxacin_dosage",
                    models.IntegerField(verbose_name="If ciprofloxacin, Dosage (mg/Kg)"),
                ),
                (
                    "antibiotic_drug_other",
                    models.CharField(max_length=120, verbose_name="If other"),
                ),
                (
                    "antiviral_drug",
                    models.CharField(max_length=60, verbose_name="If antiviral"),
                ),
                (
                    "antiviral_dosage",
                    models.IntegerField(verbose_name="If antiviral, Dosage (mg/Kg)"),
                ),
                (
                    "antifungal_drug",
                    models.CharField(
                        choices=[
                            ("ntraconazole", "Ntraconazole"),
                            ("fluconazole", "Fluconazole"),
                            ("other", "Other"),
                        ],
                        max_length=60,
                        verbose_name="If antifungal",
                    ),
                ),
                (
                    "antifungal_dosage",
                    models.IntegerField(
                        verbose_name="If (itraconazole or fluconazole) (mg/kg):"
                    ),
                ),
                ("antifungal_other", models.IntegerField(verbose_name="If other:")),
                (
                    "antifungal_dosage_other",
                    models.CharField(max_length=120, verbose_name="If other, Dosage (mg/Kg)"),
                ),
                (
                    "bone_marrow_transplant",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Has Bone Marrow Transplant done?",
                    ),
                ),
                (
                    "bone_marrow_transplant_date",
                    models.DateField(
                        verbose_name="If yes, date when Bone Marrow Transplant done? "
                    ),
                ),
                (
                    "bone_marrow_transplant_no",
                    models.TextField(verbose_name="If no, give reason :"),
                ),
                (
                    "completed_treatment",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Has patient completed treatment?",
                    ),
                ),
                (
                    "completed_treatment_date",
                    models.DateField(
                        verbose_name="If yes, when  the treatment was completed?"
                    ),
                ),
                (
                    "treatment_outcome",
                    models.CharField(
                        choices=[
                            ("on_remission", "On remission"),
                            ("not_change", "not change"),
                            ("in_progress", "in progress"),
                        ],
                        max_length=24,
                        verbose_name="If yes, what is the outcome?",
                    ),
                ),
                (
                    "not_completed_treatment",
                    models.TextField(verbose_name="If no, give a reason:"),
                ),
                (
                    "follow_up",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Is follow up done?",
                    ),
                ),
                (
                    "follow_up_date",
                    models.DateField(verbose_name="If yes, date when follow up done"),
                ),
                (
                    "follow_up_date_fbp",
                    models.DateField(verbose_name="Date when Full Blood Picture done?"),
                ),
                ("medical_history", models.TextField(verbose_name="Medical history:")),
                (
                    "physical_examination",
                    models.TextField(verbose_name="Physical examination:"),
                ),
                (
                    "dopler_ultrasound",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Dopler ultrasound done?",
                    ),
                ),
                (
                    "dopler_ultrasound_no",
                    models.TextField(verbose_name="if no, give a reason:"),
                ),
                (
                    "dopler_ultrasound_result",
                    models.TextField(null=True, verbose_name="If yes, result:"),
                ),
                (
                    "lab_investigation",
                    models.CharField(
                        max_length=120, verbose_name="Any laboratory investigation done?"
                    ),
                ),
                (
                    "lab_investigation_result",
                    models.TextField(null=True, verbose_name="If done, what was the result?"),
                ),
                (
                    "other_note",
                    models.TextField(null=True, verbose_name="Any clinical notes:"),
                ),
            ],
            options={
                "verbose_name": "Aplastic Anaemia CRF",
                "verbose_name_plural": "Aplastic Anaemia CRF",
                "ordering": ("-modified", "-created"),
                "get_latest_by": "modified",
                "abstract": False,
                "default_permissions": ("add", "change", "delete", "view", "export", "import"),
            },
        ),
        migrations.CreateModel(
            name="HistoricalAplasticAnaemiaCrf",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="Name:")),
                ("dob", models.DateField(verbose_name="Date of birth:")),
                ("age", models.IntegerField(verbose_name="Age:")),
                (
                    "sex",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=4,
                        verbose_name="Sex",
                    ),
                ),
                ("weight", models.IntegerField(help_text="in Kg", verbose_name="Weight")),
                ("file_no", models.CharField(max_length=80, verbose_name="File Number:")),
                ("region", models.CharField(max_length=24, verbose_name="Region")),
                ("district", models.CharField(max_length=24, verbose_name="District")),
                ("date_admission", models.DateField(verbose_name="Date Of Admission:")),
                (
                    "symptom_present_today",
                    models.TextField(verbose_name="Symptom presented today:"),
                ),
                (
                    "duration_symptom_start",
                    models.CharField(
                        max_length=120, verbose_name="Duration since this symptom started?"
                    ),
                ),
                (
                    "sigs_present_today",
                    models.TextField(max_length=120, verbose_name="Sigs presented today"),
                ),
                (
                    "duration_sigs_start",
                    models.CharField(
                        max_length=120, verbose_name="Duration since this sign started?"
                    ),
                ),
                (
                    "wbc",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="WBC (K/uL):"
                    ),
                ),
                (
                    "anc",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="ANC (K/uL):"
                    ),
                ),
                (
                    "lymphocytes",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="Lymphocytes (K/uL):"
                    ),
                ),
                (
                    "haemoglobin",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="Haemoglobin (g/dL):"
                    ),
                ),
                (
                    "platelets",
                    models.DecimalField(
                        decimal_places=3, max_digits=6, verbose_name="Platelets K/uL):"
                    ),
                ),
                (
                    "date_fbp",
                    models.DateField(verbose_name="Date when Full Blood Picture done?"),
                ),
                (
                    "reticulocyte_results",
                    models.IntegerField(verbose_name="Reticulocyte result:"),
                ),
                (
                    "reticulocyte_pcntg",
                    models.IntegerField(verbose_name="Reticulocyte result(% percentage):"),
                ),
                (
                    "reticulocyte_date",
                    models.DateField(verbose_name="Date when reticulocyte done?"),
                ),
                (
                    "bone_marrow_aspiration",
                    models.CharField(
                        max_length=120, verbose_name="Bone Marrow Aspiration Result"
                    ),
                ),
                (
                    "bone_marrow_aspiration_date",
                    models.DateField(verbose_name="Date when Bone Marrow Aspiration done?"),
                ),
                (
                    "bone_biopsy_aspiration",
                    models.CharField(
                        max_length=120, verbose_name="Bone Marrow Biopsy Result:"
                    ),
                ),
                (
                    "bone_biopsy_aspiration_date",
                    models.DateField(verbose_name="Date when Bone Marrow Biopsy done?"),
                ),
                (
                    "smear",
                    models.CharField(max_length=120, verbose_name="Peripheral Smear Result:"),
                ),
                (
                    "smear_date",
                    models.DateField(verbose_name="Date when Peripheral Smears done?"),
                ),
                (
                    "hiv_test",
                    models.CharField(max_length=120, verbose_name="HIV test Result:"),
                ),
                ("hiv_test_date", models.DateField(verbose_name="Date when HIV done?")),
                (
                    "hepatitis_b",
                    models.CharField(max_length=120, verbose_name="Hepatitis B Result:"),
                ),
                (
                    "hepatitis_b_date",
                    models.DateField(verbose_name="Date when Hepatitis B done?"),
                ),
                (
                    "hepatitis_c",
                    models.CharField(max_length=120, verbose_name="Hepatitis C Result:"),
                ),
                (
                    "hepatitis_c_date",
                    models.DateField(verbose_name="Date when Hepatitis C done?"),
                ),
                ("ebv", models.CharField(max_length=120, verbose_name="EBV Result")),
                ("ebv_date", models.DateField(verbose_name="Date when EBV done?")),
                ("cmv", models.CharField(max_length=120, verbose_name="CMV Result:")),
                ("cmv_date", models.DateField(verbose_name="Date when CMV done?")),
                (
                    "atg",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was ATG given?",
                    ),
                ),
                (
                    "atg_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                ("atg_dosage", models.IntegerField(verbose_name="if yes, Dosage (mg/Kg)")),
                ("atg_date", models.DateField(verbose_name="Date ATG was given?")),
                (
                    "cyclosporine",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was Cyclosporine given?",
                    ),
                ),
                (
                    "cyclosporine_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                (
                    "cyclosporine_dosage",
                    models.IntegerField(verbose_name="if yes, Dosage (mg/Kg)"),
                ),
                (
                    "cyclosporine_date",
                    models.DateField(verbose_name="Date Cyclosporine given?"),
                ),
                (
                    "steroid",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was Steroid given?",
                    ),
                ),
                (
                    "steroid_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                (
                    "steroid_drug",
                    models.CharField(
                        choices=[
                            ("yes", "Methylprednisolone"),
                            ("prednisolone", "Prednisolone"),
                            ("hydrocortisone", "Hydrocortisone"),
                        ],
                        max_length=60,
                        verbose_name="Which steroid was given?",
                    ),
                ),
                (
                    "steroid_drug_other",
                    models.CharField(max_length=120, verbose_name="If other"),
                ),
                ("steroid_dosage", models.IntegerField(verbose_name="if yes, Dosage (mg/Kg)")),
                ("steroid_date", models.DateField(verbose_name="Date Cyclosporine given?")),
                (
                    "antihistamine",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was Antihistamine given?",
                    ),
                ),
                (
                    "antihistamine_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                (
                    "antihistamine_drug",
                    models.CharField(
                        choices=[
                            ("cetrizine", "Cetrizine"),
                            ("loratadine", "Loratadine"),
                            ("desloratadine", "Desloratadine"),
                            ("other", "Other"),
                        ],
                        max_length=60,
                        verbose_name="If yes, Which Antihistamine was given?",
                    ),
                ),
                (
                    "antihistamine_drug_other",
                    models.CharField(max_length=120, verbose_name="If other"),
                ),
                (
                    "antihistamine_dosage",
                    models.IntegerField(verbose_name="if yes, Dosage (mg/Kg)"),
                ),
                (
                    "antihistamine_date",
                    models.DateField(verbose_name="Date Antihistamine given?"),
                ),
                (
                    "prophylaxis",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Was Prophylaxis given?",
                    ),
                ),
                (
                    "prophylaxis_no_reasons",
                    models.CharField(max_length=120, verbose_name="If no, give a reason:"),
                ),
                (
                    "prophylaxis_drug",
                    models.CharField(
                        choices=[
                            ("antibiotic", "Antibiotic"),
                            ("antifungal", "Antifungal"),
                            ("antiviral", "Antiviral"),
                            ("all_above", "All of above"),
                            ("other", "Other"),
                        ],
                        max_length=60,
                        verbose_name="If yes, Which Prophylaxis was given?",
                    ),
                ),
                (
                    "antibiotic_drug",
                    models.CharField(
                        choices=[("ciprofloxacin", "Ciprofloxacin"), ("other", "Other")],
                        max_length=60,
                        verbose_name="If antibiotic",
                    ),
                ),
                (
                    "ciprofloxacin_dosage",
                    models.IntegerField(verbose_name="If ciprofloxacin, Dosage (mg/Kg)"),
                ),
                (
                    "antibiotic_drug_other",
                    models.CharField(max_length=120, verbose_name="If other"),
                ),
                (
                    "antiviral_drug",
                    models.CharField(max_length=60, verbose_name="If antiviral"),
                ),
                (
                    "antiviral_dosage",
                    models.IntegerField(verbose_name="If antiviral, Dosage (mg/Kg)"),
                ),
                (
                    "antifungal_drug",
                    models.CharField(
                        choices=[
                            ("ntraconazole", "Ntraconazole"),
                            ("fluconazole", "Fluconazole"),
                            ("other", "Other"),
                        ],
                        max_length=60,
                        verbose_name="If antifungal",
                    ),
                ),
                (
                    "antifungal_dosage",
                    models.IntegerField(
                        verbose_name="If (itraconazole or fluconazole) (mg/kg):"
                    ),
                ),
                ("antifungal_other", models.IntegerField(verbose_name="If other:")),
                (
                    "antifungal_dosage_other",
                    models.CharField(max_length=120, verbose_name="If other, Dosage (mg/Kg)"),
                ),
                (
                    "bone_marrow_transplant",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Has Bone Marrow Transplant done?",
                    ),
                ),
                (
                    "bone_marrow_transplant_date",
                    models.DateField(
                        verbose_name="If yes, date when Bone Marrow Transplant done? "
                    ),
                ),
                (
                    "bone_marrow_transplant_no",
                    models.TextField(verbose_name="If no, give reason :"),
                ),
                (
                    "completed_treatment",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Has patient completed treatment?",
                    ),
                ),
                (
                    "completed_treatment_date",
                    models.DateField(
                        verbose_name="If yes, when  the treatment was completed?"
                    ),
                ),
                (
                    "treatment_outcome",
                    models.CharField(
                        choices=[
                            ("on_remission", "On remission"),
                            ("not_change", "not change"),
                            ("in_progress", "in progress"),
                        ],
                        max_length=24,
                        verbose_name="If yes, what is the outcome?",
                    ),
                ),
                (
                    "not_completed_treatment",
                    models.TextField(verbose_name="If no, give a reason:"),
                ),
                (
                    "follow_up",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Is follow up done?",
                    ),
                ),
                (
                    "follow_up_date",
                    models.DateField(verbose_name="If yes, date when follow up done"),
                ),
                (
                    "follow_up_date_fbp",
                    models.DateField(verbose_name="Date when Full Blood Picture done?"),
                ),
                ("medical_history", models.TextField(verbose_name="Medical history:")),
                (
                    "physical_examination",
                    models.TextField(verbose_name="Physical examination:"),
                ),
                (
                    "dopler_ultrasound",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        max_length=6,
                        verbose_name="Dopler ultrasound done?",
                    ),
                ),
                (
                    "dopler_ultrasound_no",
                    models.TextField(verbose_name="if no, give a reason:"),
                ),
                (
                    "dopler_ultrasound_result",
                    models.TextField(null=True, verbose_name="If yes, result:"),
                ),
                (
                    "lab_investigation",
                    models.CharField(
                        max_length=120, verbose_name="Any laboratory investigation done?"
                    ),
                ),
                (
                    "lab_investigation_result",
                    models.TextField(null=True, verbose_name="If done, what was the result?"),
                ),
                (
                    "other_note",
                    models.TextField(null=True, verbose_name="Any clinical notes:"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Aplastic Anaemia CRF",
                "verbose_name_plural": "historical Aplastic Anaemia CRF",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
